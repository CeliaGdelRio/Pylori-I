ardu=serialport("/dev/ttyACM0",115200);
calibrarRobot(ardu,0,1);

rosshutdown
rosinit("192.168.1.4",11311);
basesub=rossubscriber("/vrpn_client_node/Trackable1/pose","DataFormat","struct");
extrsub=rossubscriber("/vrpn_client_node/Trackable2/pose","DataFormat","struct");

%indico el origen
basedata=receive(basesub,0.5);
basepos=[basedata.pose.position.x,basedata.pose.position.y,basedata.pose.position.z,basedata.pose.orientation.x,basedata.pose.orientation.y,basedata.pose.orientation.z];
extrdata=receive(extrsub,0.5);
expos=[extrdata.pose.position.x,extrdata.pose.position.y,extrdata.pose.position.z,extrdata.pose.orientation.x,extrdata.pose.orientation.y,extrdata.pose.orientation.z];
% origen=["origen"];
% writematrix(origen,'dos_motores_2.xls','WriteMode','append');
motores=zeros(1,16);
pos=[basepos,expos,motores];
writematrix(pos,'todos','WriteMode','append');


header=["x_b","y_b","z_b","yaw_b","pitch_b","roll_b","x_e","y_e","z_e","yaw_e","pitch_e","roll_e","motores"];
writematrix(header,'todos.xls','WriteMode','append');

p=200;
for a=1:2
   if a==1
       a1=1;
       a2=2;
   elseif a==2
       a1=2;
       a2=1;
   end
   motores(a1)=p;
   motores(a2)=-p;
   mover_motor(ardu,a2,2,1200,-1*p,1);
   mover_motor(ardu,a1,2,1200,p,1);
  
   for b=3:4
       if b==3
           b1=3;
           b2=4;
       elseif b==4
           b1=4;
           b2=3;
       end
       motores(b1)=p;
       motores(b2)=-p;
       mover_motor(ardu,b2,2,1200,-1*p,1);
       mover_motor(ardu,b1,2,1200,p,1);
               
      for c=5:6       
          if c==5
               c1=5;
               c2=6;
           elseif a==6
               c1=6;
               c2=5;
           end
           motores(c1)=p;
           motores(c2)=-p;
           mover_motor(ardu,c2,2,1200,-1*p,1);
           mover_motor(ardu,c1,2,1200,p,1);
         for d=7:8 
            if d==7
               d1=8;
               d2=7;
            elseif d==8
               d1=8;
               d2=7;
            end
            motores(d1)=p;
            motores(d2)=-p;
            mover_motor(ardu,d2,2,1200,-1*p,1);
            mover_motor(ardu,d1,2,1200,p,1);
            for e=9:10 
                if e==9
                   e1=9;
                   e2=10;
               elseif e==10
                   e1=10;
                   e2=9;
               end
               motores(e1)=p;
               motores(e2)=-p;
               mover_motor(ardu,e2,2,1200,-1*p,1);
               mover_motor(ardu,e1,2,1200,p,1);
               for f=11:12 
                   if f==11
                       f1=11;
                       f2=12;
                   elseif f==12
                       f1=12;
                       f2=11;
                   end
                   motores(f1)=p;
                   motores(f2)=-p;
                   mover_motor(ardu,f2,2,1200,-1*p,1);
                   mover_motor(ardu,f1,2,1200,p,1);
                   for g=13:14
                       if g==13
                           g1=13;
                           g2=14;
                       elseif g==14
                           g1=14;
                           g2=13;
                       end
                       motores(g1)=p;
                       motores(g2)=-p;
                       mover_motor(ardu,g2,2,1200,-1*p,1);
                       mover_motor(ardu,g1,2,1200,p,1);
                      for h=15:16
                          if h==15
                               h1=15;
                               h2=16;
                           elseif h==16
                               h1=16;
                               h2=15;
                           end
                           motores(h1)=p;
                           motores(h2)=-p;
                           mover_motor(ardu,h2,2,1200,-1*p,1);
                           mover_motor(ardu,h1,2,1200,p,1);
                           basedata=receive(basesub,1);
                           basepos=[basedata.pose.position.x,basedata.pose.position.y,basedata.pose.position.z,basedata.pose.orientation.x,basedata.pose.orientation.y,basedata.pose.orientation.z];
                           extrdata=receive(extrsub,1);
                           expos=[extrdata.pose.position.x,extrdata.pose.position.y,extrdata.pose.position.z,extrdata.pose.orientation.x,extrdata.pose.orientation.y,extrdata.pose.orientation.z];
                           pos=[basepos,expos,motores];
                           writematrix(pos,'todos.xls','WriteMode','append');
                      end
                      h=15;
                   end
                   g=13;
               end
               f=11;
            end
            e=9;
         end
         d=7;
      end
      c=5;
   end
   b=3;
end

calibrarRobot(ardu,2,1);
delete(ardu);